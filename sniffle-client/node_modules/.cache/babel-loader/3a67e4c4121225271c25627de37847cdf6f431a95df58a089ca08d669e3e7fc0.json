{"ast":null,"code":"import axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nlet api = `${process.env.REACT_APP_API}/users`;\nexport function checkUser(userToCheck) {\n  return axios.post(`http://localhost:10000/api/login`, userToCheck);\n}\n// export function checkUser(userToCheck: Pick<User, \"email\" | \"password\">) {\n//   return axios.post(`${api}/login/?email=${userToCheck.email}&password=${userToCheck.password}`);\n// }\n\n////no need for Authorization\n\nexport function addUser(newUser) {\n  return axios.post(api, newUser);\n}\nexport function updateUser(updatedUser, _id) {\n  return axios.put(`${api}/${_id}`, updatedUser);\n}\nexport function getUserById(_id) {\n  return axios.get(`${api}/${_id}`);\n}\nexport function getUsers() {\n  return axios.get(api);\n}\nexport function deleteUser(_id) {\n  return axios.delete(`${api}/${_id}`);\n}\nexport function getTokenDetails() {\n  let token = sessionStorage.getItem(\"token\");\n  return jwt_decode(token);\n}","map":{"version":3,"names":["axios","jwt_decode","api","process","env","REACT_APP_API","checkUser","userToCheck","post","addUser","newUser","updateUser","updatedUser","_id","put","getUserById","get","getUsers","deleteUser","delete","getTokenDetails","token","sessionStorage","getItem"],"sources":["/Users/lironds/Documents/FullStack/HackerU/react/sniffle-client/src/services/usersServices.ts"],"sourcesContent":["import axios from \"axios\";\nimport User from \"../interfaces/User\";\nimport jwt_decode from \"jwt-decode\";\n\nlet api: string = `${process.env.REACT_APP_API}/users`;\n\nexport function checkUser(userToCheck: User) {\n  return axios.post(`http://localhost:10000/api/login`, userToCheck);\n}\n// export function checkUser(userToCheck: Pick<User, \"email\" | \"password\">) {\n//   return axios.post(`${api}/login/?email=${userToCheck.email}&password=${userToCheck.password}`);\n// }\n\n////no need for Authorization\n\nexport function addUser(newUser: User) {\n  return axios.post(api, newUser);\n}\n\nexport function updateUser(updatedUser: User, _id: string) {\n  return axios.put(`${api}/${_id}`, updatedUser);\n}\n\nexport function getUserById(_id: string) {\n  return axios.get(`${api}/${_id}`);\n}\n\nexport function getUsers() {\n  return axios.get(api);\n}\n\nexport function deleteUser(_id: string) {\n  return axios.delete(`${api}/${_id}`);\n}\n\nexport function getTokenDetails() {\n  let token = sessionStorage.getItem(\"token\") as string;\n  return jwt_decode(token);\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,UAAU,MAAM,YAAY;AAEnC,IAAIC,GAAW,GAAI,GAAEC,OAAO,CAACC,GAAG,CAACC,aAAc,QAAO;AAEtD,OAAO,SAASC,SAASA,CAACC,WAAiB,EAAE;EAC3C,OAAOP,KAAK,CAACQ,IAAI,CAAE,kCAAiC,EAAED,WAAW,CAAC;AACpE;AACA;AACA;AACA;;AAEA;;AAEA,OAAO,SAASE,OAAOA,CAACC,OAAa,EAAE;EACrC,OAAOV,KAAK,CAACQ,IAAI,CAACN,GAAG,EAAEQ,OAAO,CAAC;AACjC;AAEA,OAAO,SAASC,UAAUA,CAACC,WAAiB,EAAEC,GAAW,EAAE;EACzD,OAAOb,KAAK,CAACc,GAAG,CAAE,GAAEZ,GAAI,IAAGW,GAAI,EAAC,EAAED,WAAW,CAAC;AAChD;AAEA,OAAO,SAASG,WAAWA,CAACF,GAAW,EAAE;EACvC,OAAOb,KAAK,CAACgB,GAAG,CAAE,GAAEd,GAAI,IAAGW,GAAI,EAAC,CAAC;AACnC;AAEA,OAAO,SAASI,QAAQA,CAAA,EAAG;EACzB,OAAOjB,KAAK,CAACgB,GAAG,CAACd,GAAG,CAAC;AACvB;AAEA,OAAO,SAASgB,UAAUA,CAACL,GAAW,EAAE;EACtC,OAAOb,KAAK,CAACmB,MAAM,CAAE,GAAEjB,GAAI,IAAGW,GAAI,EAAC,CAAC;AACtC;AAEA,OAAO,SAASO,eAAeA,CAAA,EAAG;EAChC,IAAIC,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAW;EACrD,OAAOtB,UAAU,CAACoB,KAAK,CAAC;AAC1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}