{"ast":null,"code":"import axios from \"axios\";\nlet api = `${process.env.REACT_APP_API}/favorites`;\n\n// export function getFavByCurrentUser(id: number) {\n//   return axios.get<Favorite[]>(`${api}?id=${id}`);\n// }\n// export function deleteFavById(id: number) {\n//   return axios.delete(`${api}/${id}`);\n// }\nexport function addToFav(currentUser, cardToAdd) {\n  return axios.post(api, {\n    userId,\n    ...newCard\n  });\n}\nexport function getFav(currentUser) {\n  return axios.get(`${api}?currentUser=${currentUser}`);\n}\n\n// export function createFav(userId: number) {\n//   return axios.post(api, { userId, ...card });\n// }\n// export async function addToFav(currentUser: number, cardToAdd: Card) {\n//   try {\n//     let res = await getFav(currentUser);\n//     res.data[0].push({ currentUser, ...cardToAdd });\n//     return axios.patch(`${api}?currentUser=${currentUser}`);\n//   } catch (error) {\n//     console.log(error);\n//   }\n// } // add to cart / update cart\n// export async function addToCart(userId: number, productToAdd: Product) {\n//   try {\n//     // 1. search for the exising cart products\n//     let res = await getCart(userId);\n//     // 2. add the new product to the products array\n//     res.data[0].products.push({ ...productToAdd, quantity: 1 });\n//     // 3. update the cart - put or patch\n//     return axios.patch(`${api}/${res.data[0].id}`, {\n//       products: res.data[0].products,\n//     });\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n\nexport async function removeFromFav(userId, cardId) {\n  try {\n    let res = await getFav(userId);\n    res.data[0].cards = res.data[0].cards.filter(card => card.id !== cardId);\n    return axios.patch(`${api}/${res.data[0].id}`, {\n      cards: res.data[0].cards\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function checkIfInFav(userId, cardIds) {\n  return axios.get(`${api}/${userId}/cards`, {\n    params: {\n      cardIds: cardIds.join(\",\")\n    }\n  });\n}","map":{"version":3,"names":["axios","api","process","env","REACT_APP_API","addToFav","currentUser","cardToAdd","post","userId","newCard","getFav","get","removeFromFav","cardId","res","data","cards","filter","card","id","patch","error","console","log","checkIfInFav","cardIds","params","join"],"sources":["/Users/lironds/Documents/FullStack/HackerU/react/sniffle/src/services/favServices.ts"],"sourcesContent":["import axios from \"axios\";\nimport Card from \"../interfaces/Card\";\nimport Favorite from \"../interfaces/Favorite\";\n\nlet api: string = `${process.env.REACT_APP_API}/favorites`;\n\n// export function getFavByCurrentUser(id: number) {\n//   return axios.get<Favorite[]>(`${api}?id=${id}`);\n// }\n// export function deleteFavById(id: number) {\n//   return axios.delete(`${api}/${id}`);\n// }\nexport function addToFav(currentUser: number, cardToAdd: Card) {\n  return axios.post(api, { userId, ...newCard });\n}\nexport function getFav(currentUser: number) {\n  return axios.get(`${api}?currentUser=${currentUser}`);\n}\n\n// export function createFav(userId: number) {\n//   return axios.post(api, { userId, ...card });\n// }\n// export async function addToFav(currentUser: number, cardToAdd: Card) {\n//   try {\n//     let res = await getFav(currentUser);\n//     res.data[0].push({ currentUser, ...cardToAdd });\n//     return axios.patch(`${api}?currentUser=${currentUser}`);\n//   } catch (error) {\n//     console.log(error);\n//   }\n// } // add to cart / update cart\n// export async function addToCart(userId: number, productToAdd: Product) {\n//   try {\n//     // 1. search for the exising cart products\n//     let res = await getCart(userId);\n//     // 2. add the new product to the products array\n//     res.data[0].products.push({ ...productToAdd, quantity: 1 });\n//     // 3. update the cart - put or patch\n//     return axios.patch(`${api}/${res.data[0].id}`, {\n//       products: res.data[0].products,\n//     });\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n\nexport async function removeFromFav(userId: number, cardId: number) {\n  try {\n    let res = await getFav(userId);\n    res.data[0].cards = res.data[0].cards.filter((card: Card) => card.id !== cardId);\n    return axios.patch(`${api}/${res.data[0].id}`, {\n      cards: res.data[0].cards,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function checkIfInFav(userId: number, cardIds: number[]) {\n  return axios.get(`${api}/${userId}/cards`, {\n    params: {\n      cardIds: cardIds.join(\",\"),\n    },\n  });\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAIzB,IAAIC,GAAW,GAAI,GAAEC,OAAO,CAACC,GAAG,CAACC,aAAc,YAAW;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,QAAQA,CAACC,WAAmB,EAAEC,SAAe,EAAE;EAC7D,OAAOP,KAAK,CAACQ,IAAI,CAACP,GAAG,EAAE;IAAEQ,MAAM;IAAE,GAAGC;EAAQ,CAAC,CAAC;AAChD;AACA,OAAO,SAASC,MAAMA,CAACL,WAAmB,EAAE;EAC1C,OAAON,KAAK,CAACY,GAAG,CAAE,GAAEX,GAAI,gBAAeK,WAAY,EAAC,CAAC;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,eAAeO,aAAaA,CAACJ,MAAc,EAAEK,MAAc,EAAE;EAClE,IAAI;IACF,IAAIC,GAAG,GAAG,MAAMJ,MAAM,CAACF,MAAM,CAAC;IAC9BM,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,KAAK,GAAGF,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,KAAK,CAACC,MAAM,CAAEC,IAAU,IAAKA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAAC;IAChF,OAAOd,KAAK,CAACqB,KAAK,CAAE,GAAEpB,GAAI,IAAGc,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACI,EAAG,EAAC,EAAE;MAC7CH,KAAK,EAAEF,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC;IACrB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF;AAEA,OAAO,SAASG,YAAYA,CAAChB,MAAc,EAAEiB,OAAiB,EAAE;EAC9D,OAAO1B,KAAK,CAACY,GAAG,CAAE,GAAEX,GAAI,IAAGQ,MAAO,QAAO,EAAE;IACzCkB,MAAM,EAAE;MACND,OAAO,EAAEA,OAAO,CAACE,IAAI,CAAC,GAAG;IAC3B;EACF,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}