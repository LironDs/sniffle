{"ast":null,"code":"import axios from \"axios\";\nimport { successMsg } from \"./feedbacksServices\";\nlet api = `${process.env.REACT_APP_API}/favorites`;\nexport function getFav(_id) {\n  return axios.get(`${api}?_id=${_id}`);\n}\n\n// add to fav / update fav\nexport async function addToFav(userId, cardToAdd) {\n  try {\n    let res = await getFav(userId);\n    if (res.data.length === 0) {\n      await createFav(userId);\n      res = await getFav(userId);\n    }\n    const cardInFav = res.data[0].favCards.some(card => card._id === cardToAdd._id);\n    if (!cardInFav) {\n      res.data[0].favCards.push({\n        ...cardToAdd\n      });\n      successMsg(\"Card added to favorites.\");\n      return await axios.patch(`${api}/${res.data[0]._id}`, {\n        favCards: res.data[0].favCards\n      });\n    } else {\n      successMsg(\"Card is already in favorites.\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function createFav(_id) {\n  return axios.post(api, {\n    _id: _id,\n    favCards: []\n  });\n}\nexport function checkFavCard(favToCheck, _id) {\n  return axios.get(`${api}/${_id}`);\n}\nexport async function removeFromFav(userId, cardId) {\n  try {\n    let res = await getFav(userId);\n    res.data[0].favCards = res.data[0].favCards.filter(favCard => favCard._id !== cardId);\n    return axios.patch(`${api}/${res.data[0]._id}`, {\n      favCards: res.data[0].favCards\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}","map":{"version":3,"names":["axios","successMsg","api","process","env","REACT_APP_API","getFav","_id","get","addToFav","userId","cardToAdd","res","data","length","createFav","cardInFav","favCards","some","card","push","patch","error","console","log","post","checkFavCard","favToCheck","removeFromFav","cardId","filter","favCard"],"sources":["/Users/lironds/Documents/FullStack/HackerU/react/sniffle-client/src/services/favServices.ts"],"sourcesContent":["import axios from \"axios\";\nimport Card from \"../interfaces/Card\";\nimport Favorite from \"../interfaces/Favorite\";\nimport { successMsg } from \"./feedbacksServices\";\n\nlet api: string = `${process.env.REACT_APP_API}/favorites`;\n\nexport function getFav(_id: string) {\n  return axios.get(`${api}?_id=${_id}`);\n}\n\n// add to fav / update fav\nexport async function addToFav(userId: string, cardToAdd: Card) {\n  try {\n    let res = await getFav(userId);\n    if (res.data.length === 0) {\n      await createFav(userId);\n      res = await getFav(userId);\n    }\n\n    const cardInFav = res.data[0].favCards.some((card: Card) => card._id === cardToAdd._id);\n    if (!cardInFav) {\n      res.data[0].favCards.push({ ...cardToAdd });\n\n      successMsg(\"Card added to favorites.\");\n      return await axios.patch(`${api}/${res.data[0]._id}`, {\n        favCards: res.data[0].favCards,\n      });\n    } else {\n      successMsg(\"Card is already in favorites.\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function createFav(_id: string) {\n  return axios.post(api, { _id: _id, favCards: [] });\n}\n\nexport function checkFavCard(favToCheck: Card, _id: string) {\n  return axios.get(`${api}/${_id}`);\n}\n\nexport async function removeFromFav(userId: string, cardId: string) {\n  try {\n    let res = await getFav(userId);\n    res.data[0].favCards = res.data[0].favCards.filter((favCard: Card) => favCard._id !== cardId);\n    return axios.patch(`${api}/${res.data[0]._id}`, {\n      favCards: res.data[0].favCards,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,SAASC,UAAU,QAAQ,qBAAqB;AAEhD,IAAIC,GAAW,GAAI,GAAEC,OAAO,CAACC,GAAG,CAACC,aAAc,YAAW;AAE1D,OAAO,SAASC,MAAMA,CAACC,GAAW,EAAE;EAClC,OAAOP,KAAK,CAACQ,GAAG,CAAE,GAAEN,GAAI,QAAOK,GAAI,EAAC,CAAC;AACvC;;AAEA;AACA,OAAO,eAAeE,QAAQA,CAACC,MAAc,EAAEC,SAAe,EAAE;EAC9D,IAAI;IACF,IAAIC,GAAG,GAAG,MAAMN,MAAM,CAACI,MAAM,CAAC;IAC9B,IAAIE,GAAG,CAACC,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;MACzB,MAAMC,SAAS,CAACL,MAAM,CAAC;MACvBE,GAAG,GAAG,MAAMN,MAAM,CAACI,MAAM,CAAC;IAC5B;IAEA,MAAMM,SAAS,GAAGJ,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACI,QAAQ,CAACC,IAAI,CAAEC,IAAU,IAAKA,IAAI,CAACZ,GAAG,KAAKI,SAAS,CAACJ,GAAG,CAAC;IACvF,IAAI,CAACS,SAAS,EAAE;MACdJ,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACI,QAAQ,CAACG,IAAI,CAAC;QAAE,GAAGT;MAAU,CAAC,CAAC;MAE3CV,UAAU,CAAC,0BAA0B,CAAC;MACtC,OAAO,MAAMD,KAAK,CAACqB,KAAK,CAAE,GAAEnB,GAAI,IAAGU,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACN,GAAI,EAAC,EAAE;QACpDU,QAAQ,EAAEL,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACI;MACxB,CAAC,CAAC;IACJ,CAAC,MAAM;MACLhB,UAAU,CAAC,+BAA+B,CAAC;IAC7C;EACF,CAAC,CAAC,OAAOqB,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF;AAEA,OAAO,SAASP,SAASA,CAACR,GAAW,EAAE;EACrC,OAAOP,KAAK,CAACyB,IAAI,CAACvB,GAAG,EAAE;IAAEK,GAAG,EAAEA,GAAG;IAAEU,QAAQ,EAAE;EAAG,CAAC,CAAC;AACpD;AAEA,OAAO,SAASS,YAAYA,CAACC,UAAgB,EAAEpB,GAAW,EAAE;EAC1D,OAAOP,KAAK,CAACQ,GAAG,CAAE,GAAEN,GAAI,IAAGK,GAAI,EAAC,CAAC;AACnC;AAEA,OAAO,eAAeqB,aAAaA,CAAClB,MAAc,EAAEmB,MAAc,EAAE;EAClE,IAAI;IACF,IAAIjB,GAAG,GAAG,MAAMN,MAAM,CAACI,MAAM,CAAC;IAC9BE,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACI,QAAQ,GAAGL,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACI,QAAQ,CAACa,MAAM,CAAEC,OAAa,IAAKA,OAAO,CAACxB,GAAG,KAAKsB,MAAM,CAAC;IAC7F,OAAO7B,KAAK,CAACqB,KAAK,CAAE,GAAEnB,GAAI,IAAGU,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACN,GAAI,EAAC,EAAE;MAC9CU,QAAQ,EAAEL,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACI;IACxB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}