{"ast":null,"code":"import axios from \"axios\";\nlet api = `${process.env.REACT_APP_API}/favorites`;\nexport function getFav(userId) {\n  return axios.get(api, {\n    headers: {\n      Authorization: JSON.parse(sessionStorage.getItem(\"token\")).token\n    },\n    data: {\n      userId: userId\n    }\n  });\n}\n\n// add to fav / update fav\n// export async function addToFav(userId: string, cardId: string) {\n//   try {\n//     let res = await getFav(userId);\n//     if (res.data.length === 0) {\n//       await createFav(userId);\n//       res = await getFav(userId);\n//     }\n\n//     const cardInFav = res.data[0].favCards.some((card: Card) => card._id === cardId);\n//     if (!cardInFav) {\n//       res.data[0].favCards.push(cardId);\n\n//       successMsg(\"Card added to favorites.\");\n//       return await axios.patch(`${api}/${res.data[0]._id}`, {\n//         favCards: res.data[0].favCards,\n//       });\n//     } else {\n//       successMsg(\"Card is already in favorites.\");\n//     }\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\nexport async function updateFav(cardToAdd, action) {\n  try {\n    return await axios.post(api, cardToAdd, {\n      headers: {\n        Authorization: JSON.parse(sessionStorage.getItem(\"token\")).token\n      }\n    });\n  } catch (error) {\n    throw error;\n  }\n}","map":{"version":3,"names":["axios","api","process","env","REACT_APP_API","getFav","userId","get","headers","Authorization","JSON","parse","sessionStorage","getItem","token","data","updateFav","cardToAdd","action","post","error"],"sources":["/Users/lironds/Documents/FullStack/HackerU/react/sniffle-client/src/services/favServices.ts"],"sourcesContent":["import axios from \"axios\";\nimport Card from \"../interfaces/Card\";\nimport Favorite from \"../interfaces/Favorite\";\nimport { successMsg } from \"./feedbacksServices\";\n\nlet api: string = `${process.env.REACT_APP_API}/favorites`;\n\nexport function getFav(userId: string) {\n  return axios.get(api, {\n    headers: {\n      Authorization: JSON.parse(sessionStorage.getItem(\"token\") as string).token,\n    },\n    data: {\n      userId: userId,\n    },\n  });\n}\n\n// add to fav / update fav\n// export async function addToFav(userId: string, cardId: string) {\n//   try {\n//     let res = await getFav(userId);\n//     if (res.data.length === 0) {\n//       await createFav(userId);\n//       res = await getFav(userId);\n//     }\n\n//     const cardInFav = res.data[0].favCards.some((card: Card) => card._id === cardId);\n//     if (!cardInFav) {\n//       res.data[0].favCards.push(cardId);\n\n//       successMsg(\"Card added to favorites.\");\n//       return await axios.patch(`${api}/${res.data[0]._id}`, {\n//         favCards: res.data[0].favCards,\n//       });\n//     } else {\n//       successMsg(\"Card is already in favorites.\");\n//     }\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\nexport async function updateFav(cardToAdd: Card, action: \"add\" | \"remove\") {\n  try {\n    return await axios.post(api, cardToAdd, {\n      headers: {\n        Authorization: JSON.parse(sessionStorage.getItem(\"token\") as string).token,\n      },\n    });\n  } catch (error) {\n    throw error;\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAKzB,IAAIC,GAAW,GAAI,GAAEC,OAAO,CAACC,GAAG,CAACC,aAAc,YAAW;AAE1D,OAAO,SAASC,MAAMA,CAACC,MAAc,EAAE;EACrC,OAAON,KAAK,CAACO,GAAG,CAACN,GAAG,EAAE;IACpBO,OAAO,EAAE;MACPC,aAAa,EAAEC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAW,CAAC,CAACC;IACvE,CAAC;IACDC,IAAI,EAAE;MACJT,MAAM,EAAEA;IACV;EACF,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAeU,SAASA,CAACC,SAAe,EAAEC,MAAwB,EAAE;EACzE,IAAI;IACF,OAAO,MAAMlB,KAAK,CAACmB,IAAI,CAAClB,GAAG,EAAEgB,SAAS,EAAE;MACtCT,OAAO,EAAE;QACPC,aAAa,EAAEC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAW,CAAC,CAACC;MACvE;IACF,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOM,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}