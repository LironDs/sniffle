{"ast":null,"code":"import axios from \"axios\";\nlet api = `${process.env.REACT_APP_API}/favorites`;\nexport function getFavByCurrentUser(id) {\n  return axios.get(`${api}?id=${id}`);\n}\nexport function deleteFavById(id) {\n  return axios.delete(`${api}/${id}`);\n}\n\n// export function getFav(userId: number) {\n//   return axios.get(`${api}?userId=${userId}&active=true`);\n// }\n\n// export function createFav(userId: number) {\n//   return axios.post(api, { userId, cards: [], active: true });\n// }\n// export async function addToFav(userId: number, cardToAdd: Card) {\n//   try {\n//     let res = await getFav(userId);\n//     if (res.data.length === 0) {\n//       await createFav(userId);\n//       res = await getFav(userId);\n//     }\n//     res.data[0].cards.push(cardToAdd);\n//     return axios.patch(`${api}/${res.data[0].id}`, {\n//       cards: res.data[0].cards,\n//     });\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n\n// export async function removeFromFav(userId: number, cardId: number) {\n//   try {\n//     let res = await getFav(userId);\n//     res.data[0].cards = res.data[0].cards.filter((card: Card) => card.id !== cardId);\n//     return axios.patch(`${api}/${res.data[0].id}`, {\n//       cards: res.data[0].cards,\n//     });\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n\nexport function checkIfInFav(userId, cardIds) {\n  return axios.get(`${api}/${userId}/cards`, {\n    params: {\n      cardIds: cardIds.join(\",\")\n    }\n  });\n}","map":{"version":3,"names":["axios","api","process","env","REACT_APP_API","getFavByCurrentUser","id","get","deleteFavById","delete","checkIfInFav","userId","cardIds","params","join"],"sources":["/Users/lironds/Documents/FullStack/HackerU/react/sniffle/src/services/favServices.ts"],"sourcesContent":["import axios from \"axios\";\nimport Card from \"../interfaces/Card\";\nimport Favorite from \"../interfaces/Favorite\";\n\nlet api: string = `${process.env.REACT_APP_API}/favorites`;\n\nexport function getFavByCurrentUser(id: number) {\n  return axios.get<Favorite[]>(`${api}?id=${id}`);\n}\nexport function deleteFavById(id: number) {\n  return axios.delete(`${api}/${id}`);\n}\n\n// export function getFav(userId: number) {\n//   return axios.get(`${api}?userId=${userId}&active=true`);\n// }\n\n// export function createFav(userId: number) {\n//   return axios.post(api, { userId, cards: [], active: true });\n// }\n// export async function addToFav(userId: number, cardToAdd: Card) {\n//   try {\n//     let res = await getFav(userId);\n//     if (res.data.length === 0) {\n//       await createFav(userId);\n//       res = await getFav(userId);\n//     }\n//     res.data[0].cards.push(cardToAdd);\n//     return axios.patch(`${api}/${res.data[0].id}`, {\n//       cards: res.data[0].cards,\n//     });\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n\n// export async function removeFromFav(userId: number, cardId: number) {\n//   try {\n//     let res = await getFav(userId);\n//     res.data[0].cards = res.data[0].cards.filter((card: Card) => card.id !== cardId);\n//     return axios.patch(`${api}/${res.data[0].id}`, {\n//       cards: res.data[0].cards,\n//     });\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n\nexport function checkIfInFav(userId: number, cardIds: number[]) {\n  return axios.get(`${api}/${userId}/cards`, {\n    params: {\n      cardIds: cardIds.join(\",\"),\n    },\n  });\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAIzB,IAAIC,GAAW,GAAI,GAAEC,OAAO,CAACC,GAAG,CAACC,aAAc,YAAW;AAE1D,OAAO,SAASC,mBAAmBA,CAACC,EAAU,EAAE;EAC9C,OAAON,KAAK,CAACO,GAAG,CAAc,GAAEN,GAAI,OAAMK,EAAG,EAAC,CAAC;AACjD;AACA,OAAO,SAASE,aAAaA,CAACF,EAAU,EAAE;EACxC,OAAON,KAAK,CAACS,MAAM,CAAE,GAAER,GAAI,IAAGK,EAAG,EAAC,CAAC;AACrC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASI,YAAYA,CAACC,MAAc,EAAEC,OAAiB,EAAE;EAC9D,OAAOZ,KAAK,CAACO,GAAG,CAAE,GAAEN,GAAI,IAAGU,MAAO,QAAO,EAAE;IACzCE,MAAM,EAAE;MACND,OAAO,EAAEA,OAAO,CAACE,IAAI,CAAC,GAAG;IAC3B;EACF,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}