{"ast":null,"code":"import axios from \"axios\";\nimport { successMsg } from \"./feedbacksServices\";\nlet api = `${process.env.REACT_APP_API}/favorites`;\nexport function getFav(userId) {\n  return axios.get(api, {\n    headers: {\n      Authorization: JSON.parse(sessionStorage.getItem(\"token\")).token\n    },\n    data: {\n      userId: userId\n    }\n  });\n}\nexport async function updateFav(cardToAdd) {\n  try {\n    return await axios.post(api, cardToAdd, {\n      headers: {\n        Authorization: JSON.parse(sessionStorage.getItem(\"token\")).token\n      }\n    });\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function addOrRemoveCard(cardToAdd) {\n  try {\n    const response = await updateFav(cardToAdd);\n    const {\n      action,\n      message\n    } = response.data;\n    if (response.status === 200 || 201) {\n      ////if added to fav\n      if (action === \"add\") {\n        successMsg(\"Card added to favorites\");\n        /////if removed from fav\n      } else if (action === \"remove\") {\n        successMsg(\"Card removed from favorites\");\n        // Show a success message or update your UI here\n      }\n    }\n  } catch (error) {\n    console.error(\"An error occurred\", error);\n  }\n}","map":{"version":3,"names":["axios","successMsg","api","process","env","REACT_APP_API","getFav","userId","get","headers","Authorization","JSON","parse","sessionStorage","getItem","token","data","updateFav","cardToAdd","post","error","addOrRemoveCard","response","action","message","status","console"],"sources":["/Users/lironds/Documents/FullStack/HackerU/Projects/sniffle/sniffle-client/src/services/favServices.ts"],"sourcesContent":["import axios from \"axios\";\nimport Card from \"../interfaces/Card\";\nimport { successMsg } from \"./feedbacksServices\";\n\nlet api: string = `${process.env.REACT_APP_API}/favorites`;\n\nexport function getFav(userId: string) {\n  return axios.get(api, {\n    headers: {\n      Authorization: JSON.parse(sessionStorage.getItem(\"token\") as string).token,\n    },\n    data: {\n      userId: userId,\n    },\n  });\n}\n\nexport async function updateFav(cardToAdd: Card) {\n  try {\n    return await axios.post(api, cardToAdd, {\n      headers: {\n        Authorization: JSON.parse(sessionStorage.getItem(\"token\") as string).token,\n      },\n    });\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function addOrRemoveCard(cardToAdd: Card) {\n  try {\n    const response = await updateFav(cardToAdd);\n    const { action, message } = response.data;\n\n    if (response.status === 200 || 201) {\n      ////if added to fav\n      if (action === \"add\") {\n        successMsg(\"Card added to favorites\");\n        /////if removed from fav\n      } else if (action === \"remove\") {\n        successMsg(\"Card removed from favorites\");\n        // Show a success message or update your UI here\n      }\n    }\n  } catch (error) {\n    console.error(\"An error occurred\", error);\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,UAAU,QAAQ,qBAAqB;AAEhD,IAAIC,GAAW,GAAI,GAAEC,OAAO,CAACC,GAAG,CAACC,aAAc,YAAW;AAE1D,OAAO,SAASC,MAAMA,CAACC,MAAc,EAAE;EACrC,OAAOP,KAAK,CAACQ,GAAG,CAACN,GAAG,EAAE;IACpBO,OAAO,EAAE;MACPC,aAAa,EAAEC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAW,CAAC,CAACC;IACvE,CAAC;IACDC,IAAI,EAAE;MACJT,MAAM,EAAEA;IACV;EACF,CAAC,CAAC;AACJ;AAEA,OAAO,eAAeU,SAASA,CAACC,SAAe,EAAE;EAC/C,IAAI;IACF,OAAO,MAAMlB,KAAK,CAACmB,IAAI,CAACjB,GAAG,EAAEgB,SAAS,EAAE;MACtCT,OAAO,EAAE;QACPC,aAAa,EAAEC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAW,CAAC,CAACC;MACvE;IACF,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF;AAEA,OAAO,eAAeC,eAAeA,CAACH,SAAe,EAAE;EACrD,IAAI;IACF,MAAMI,QAAQ,GAAG,MAAML,SAAS,CAACC,SAAS,CAAC;IAC3C,MAAM;MAAEK,MAAM;MAAEC;IAAQ,CAAC,GAAGF,QAAQ,CAACN,IAAI;IAEzC,IAAIM,QAAQ,CAACG,MAAM,KAAK,GAAG,IAAI,GAAG,EAAE;MAClC;MACA,IAAIF,MAAM,KAAK,KAAK,EAAE;QACpBtB,UAAU,CAAC,yBAAyB,CAAC;QACrC;MACF,CAAC,MAAM,IAAIsB,MAAM,KAAK,QAAQ,EAAE;QAC9BtB,UAAU,CAAC,6BAA6B,CAAC;QACzC;MACF;IACF;EACF,CAAC,CAAC,OAAOmB,KAAK,EAAE;IACdM,OAAO,CAACN,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;EAC3C;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}