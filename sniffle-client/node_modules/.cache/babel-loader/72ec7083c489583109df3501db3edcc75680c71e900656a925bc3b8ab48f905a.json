{"ast":null,"code":"import axios from \"axios\";\nlet api = `${process.env.REACT_APP_API}/favorites`;\n\n// export function getFavByCurrentUser(id: number) {\n//   return axios.get<Favorite[]>(`${api}?id=${id}`);\n// }\n// export function deleteFavById(id: number) {\n//   return axios.delete(`${api}/${id}`);\n// }\n\nexport function getFav(currentUser) {\n  return axios.get(`${api}?currentUser=${currentUser}`);\n}\n\n// export function createFav(userId: number) {\n//   return axios.post(api, { userId, ...card });\n// }\nexport async function addToFav(currentUser, cardToAdd) {\n  try {\n    let res = await getFav(currentUser);\n    res.data.push({\n      currentUser,\n      ...cardToAdd\n    });\n    return axios.patch(`${api}?currentUser=${currentUser}`);\n  } catch (error) {\n    console.log(error);\n  }\n} // add to cart / update cart\n// export async function addToCart(userId: number, productToAdd: Product) {\n//   try {\n//     // 1. search for the exising cart products\n//     let res = await getCart(userId);\n//     // 2. add the new product to the products array\n//     res.data[0].products.push({ ...productToAdd, quantity: 1 });\n//     // 3. update the cart - put or patch\n//     return axios.patch(`${api}/${res.data[0].id}`, {\n//       products: res.data[0].products,\n//     });\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n\nexport async function removeFromFav(userId, cardId) {\n  try {\n    let res = await getFav(userId);\n    res.data[0].cards = res.data[0].cards.filter(card => card.id !== cardId);\n    return axios.patch(`${api}/${res.data[0].id}`, {\n      cards: res.data[0].cards\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function checkIfInFav(userId, cardIds) {\n  return axios.get(`${api}/${userId}/cards`, {\n    params: {\n      cardIds: cardIds.join(\",\")\n    }\n  });\n}","map":{"version":3,"names":["axios","api","process","env","REACT_APP_API","getFav","currentUser","get","addToFav","cardToAdd","res","data","push","patch","error","console","log","removeFromFav","userId","cardId","cards","filter","card","id","checkIfInFav","cardIds","params","join"],"sources":["/Users/lironds/Documents/FullStack/HackerU/react/sniffle/src/services/favServices.ts"],"sourcesContent":["import axios from \"axios\";\nimport Card from \"../interfaces/Card\";\nimport Favorite from \"../interfaces/Favorite\";\n\nlet api: string = `${process.env.REACT_APP_API}/favorites`;\n\n// export function getFavByCurrentUser(id: number) {\n//   return axios.get<Favorite[]>(`${api}?id=${id}`);\n// }\n// export function deleteFavById(id: number) {\n//   return axios.delete(`${api}/${id}`);\n// }\n\nexport function getFav(currentUser: number) {\n  return axios.get(`${api}?currentUser=${currentUser}`);\n}\n\n// export function createFav(userId: number) {\n//   return axios.post(api, { userId, ...card });\n// }\nexport async function addToFav(currentUser: number, cardToAdd: Card) {\n  try {\n    let res = await getFav(currentUser);\n    res.data.push({ currentUser, ...cardToAdd });\n    return axios.patch(`${api}?currentUser=${currentUser}`);\n  } catch (error) {\n    console.log(error);\n  }\n} // add to cart / update cart\n// export async function addToCart(userId: number, productToAdd: Product) {\n//   try {\n//     // 1. search for the exising cart products\n//     let res = await getCart(userId);\n//     // 2. add the new product to the products array\n//     res.data[0].products.push({ ...productToAdd, quantity: 1 });\n//     // 3. update the cart - put or patch\n//     return axios.patch(`${api}/${res.data[0].id}`, {\n//       products: res.data[0].products,\n//     });\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n\nexport async function removeFromFav(userId: number, cardId: number) {\n  try {\n    let res = await getFav(userId);\n    res.data[0].cards = res.data[0].cards.filter((card: Card) => card.id !== cardId);\n    return axios.patch(`${api}/${res.data[0].id}`, {\n      cards: res.data[0].cards,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function checkIfInFav(userId: number, cardIds: number[]) {\n  return axios.get(`${api}/${userId}/cards`, {\n    params: {\n      cardIds: cardIds.join(\",\"),\n    },\n  });\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAIzB,IAAIC,GAAW,GAAI,GAAEC,OAAO,CAACC,GAAG,CAACC,aAAc,YAAW;;AAE1D;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,MAAMA,CAACC,WAAmB,EAAE;EAC1C,OAAON,KAAK,CAACO,GAAG,CAAE,GAAEN,GAAI,gBAAeK,WAAY,EAAC,CAAC;AACvD;;AAEA;AACA;AACA;AACA,OAAO,eAAeE,QAAQA,CAACF,WAAmB,EAAEG,SAAe,EAAE;EACnE,IAAI;IACF,IAAIC,GAAG,GAAG,MAAML,MAAM,CAACC,WAAW,CAAC;IACnCI,GAAG,CAACC,IAAI,CAACC,IAAI,CAAC;MAAEN,WAAW;MAAE,GAAGG;IAAU,CAAC,CAAC;IAC5C,OAAOT,KAAK,CAACa,KAAK,CAAE,GAAEZ,GAAI,gBAAeK,WAAY,EAAC,CAAC;EACzD,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,eAAeG,aAAaA,CAACC,MAAc,EAAEC,MAAc,EAAE;EAClE,IAAI;IACF,IAAIT,GAAG,GAAG,MAAML,MAAM,CAACa,MAAM,CAAC;IAC9BR,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACS,KAAK,GAAGV,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACS,KAAK,CAACC,MAAM,CAAEC,IAAU,IAAKA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAAC;IAChF,OAAOnB,KAAK,CAACa,KAAK,CAAE,GAAEZ,GAAI,IAAGS,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACY,EAAG,EAAC,EAAE;MAC7CH,KAAK,EAAEV,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACS;IACrB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAON,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF;AAEA,OAAO,SAASU,YAAYA,CAACN,MAAc,EAAEO,OAAiB,EAAE;EAC9D,OAAOzB,KAAK,CAACO,GAAG,CAAE,GAAEN,GAAI,IAAGiB,MAAO,QAAO,EAAE;IACzCQ,MAAM,EAAE;MACND,OAAO,EAAEA,OAAO,CAACE,IAAI,CAAC,GAAG;IAC3B;EACF,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}