{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardInfo = () => {\n  _s();\n  let {\n    id\n  } = useParams();\n  let navigate = useNavigate();\n  let [card, setCard] = useState({\n    title: \"\",\n    subTitle: \"\",\n    description: \"\",\n    phone: \"\",\n    email: \"\",\n    web: \"\",\n    imageUrl: \"\",\n    imageAlt: \"\",\n    state: \"\",\n    country: \"\",\n    city: \"\",\n    street: \"\",\n    houseNumber: 0,\n    zip: \"\"\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"This is CardInfo\", card.id]\n  }, void 0, true);\n};\n_s(CardInfo, \"Iz/ekctGwSwX/vJyUik/kCobloQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CardInfo;\nexport default CardInfo;\nvar _c;\n$RefreshReg$(_c, \"CardInfo\");","map":{"version":3,"names":["useState","useNavigate","useParams","Fragment","_Fragment","jsxDEV","_jsxDEV","CardInfo","_s","id","navigate","card","setCard","title","subTitle","description","phone","email","web","imageUrl","imageAlt","state","country","city","street","houseNumber","zip","children","_c","$RefreshReg$"],"sources":["/Users/lironds/Documents/FullStack/HackerU/react/sniffle/src/components/CardInfo.tsx"],"sourcesContent":["import { FunctionComponent, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Card from \"../interfaces/Card\";\n\ninterface CardInfoProps {}\n\nconst CardInfo: FunctionComponent<CardInfoProps> = () => {\n  let { id } = useParams();\n  let navigate = useNavigate();\n\n  let [card, setCard] = useState<Card>({\n    title: \"\",\n    subTitle: \"\",\n    description: \"\",\n    phone: \"\",\n    email: \"\",\n    web: \"\",\n    imageUrl: \"\",\n    imageAlt: \"\",\n    state: \"\",\n    country: \"\",\n    city: \"\",\n    street: \"\",\n    houseNumber: 0,\n    zip: \"\",\n  });\n  return (\n    <>\n      This is CardInfo\n      {card.id}\n    </>\n  );\n};\n\nexport default CardInfo;\n"],"mappings":";AAAA,SAA4BA,QAAQ,QAAQ,OAAO;AACnD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAK1D,MAAMC,QAA0C,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvD,IAAI;IAAEC;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC;EACxB,IAAIQ,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE5B,IAAI,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAO;IACnCa,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE,EAAE;IACfC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,GAAG,EAAE,EAAE;IACPC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,EAAE;IACXC,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,CAAC;IACdC,GAAG,EAAE;EACP,CAAC,CAAC;EACF,oBACEpB,OAAA,CAAAF,SAAA;IAAAuB,QAAA,GAAE,kBAEA,EAAChB,IAAI,CAACF,EAAE;EAAA,eACR,CAAC;AAEP,CAAC;AAACD,EAAA,CA1BID,QAA0C;EAAA,QACjCL,SAAS,EACPD,WAAW;AAAA;AAAA2B,EAAA,GAFtBrB,QAA0C;AA4BhD,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}