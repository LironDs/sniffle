{"ast":null,"code":"import axios from \"axios\";\nimport { successMsg } from \"./feedbacksServices\";\nlet api = `${process.env.REACT_APP_API}/favorites`;\nexport function getFav(userId) {\n  return axios.get(`${api}?userId=${userId}`);\n}\n\n// add to fav / update fav\nexport async function addToFav(userId, cardId) {\n  try {\n    let res = await getFav(userId);\n    if (res.data.length === 0) {\n      await createFav(userId);\n      res = await getFav(userId);\n    }\n    const cardInFav = res.data[0].favCards.some(card => card._id === cardId);\n    if (!cardInFav) {\n      res.data[0].favCards.push(cardId);\n      successMsg(\"Card added to favorites.\");\n      return await axios.patch(`${api}/${res.data[0]._id}`, {\n        favCards: res.data[0].favCards\n      });\n    } else {\n      successMsg(\"Card is already in favorites.\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n// export async function addToFav(userId: string, cardToAdd: Card) {\n//   try {\n//     let res = await getFav(userId);\n//     if (res.data.length === 0) {\n//       await createFav(userId);\n//       res = await getFav(userId);\n//     }\n\n//     const cardInFav = res.data[0].favCards.some((card: Card) => card._id === cardToAdd._id);\n//     if (!cardInFav) {\n//       res.data[0].favCards.push({ ...cardToAdd });\n\n//       successMsg(\"Card added to favorites.\");\n//       return await axios.patch(`${api}/${res.data[0]._id}`, {\n//         favCards: res.data[0].favCards,\n//       });\n//     } else {\n//       successMsg(\"Card is already in favorites.\");\n//     }\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n\nexport function createFav(_id) {\n  return axios.post(api, {\n    _id: _id,\n    favCards: []\n  });\n}\nexport function checkFavCard(favToCheck, _id) {\n  return axios.get(`${api}/${_id}`);\n}\nexport async function removeFromFav(userId, cardId) {\n  try {\n    let res = await getFav(userId);\n    res.data[0].favCards = res.data[0].favCards.filter(favCard => favCard._id !== cardId);\n    return axios.patch(`${api}/${res.data[0]._id}`, {\n      favCards: res.data[0].favCards\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}","map":{"version":3,"names":["axios","successMsg","api","process","env","REACT_APP_API","getFav","userId","get","addToFav","cardId","res","data","length","createFav","cardInFav","favCards","some","card","_id","push","patch","error","console","log","post","checkFavCard","favToCheck","removeFromFav","filter","favCard"],"sources":["/Users/lironds/Documents/FullStack/HackerU/react/sniffle-client/src/services/favServices.ts"],"sourcesContent":["import axios from \"axios\";\nimport Card from \"../interfaces/Card\";\nimport Favorite from \"../interfaces/Favorite\";\nimport { successMsg } from \"./feedbacksServices\";\n\nlet api: string = `${process.env.REACT_APP_API}/favorites`;\n\nexport function getFav(userId: string) {\n  return axios.get(`${api}?userId=${userId}`);\n}\n\n// add to fav / update fav\nexport async function addToFav(userId: string, cardId: string) {\n  try {\n    let res = await getFav(userId);\n    if (res.data.length === 0) {\n      await createFav(userId);\n      res = await getFav(userId);\n    }\n\n    const cardInFav = res.data[0].favCards.some((card: Card) => card._id === cardId);\n    if (!cardInFav) {\n      res.data[0].favCards.push(cardId);\n\n      successMsg(\"Card added to favorites.\");\n      return await axios.patch(`${api}/${res.data[0]._id}`, {\n        favCards: res.data[0].favCards,\n      });\n    } else {\n      successMsg(\"Card is already in favorites.\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n// export async function addToFav(userId: string, cardToAdd: Card) {\n//   try {\n//     let res = await getFav(userId);\n//     if (res.data.length === 0) {\n//       await createFav(userId);\n//       res = await getFav(userId);\n//     }\n\n//     const cardInFav = res.data[0].favCards.some((card: Card) => card._id === cardToAdd._id);\n//     if (!cardInFav) {\n//       res.data[0].favCards.push({ ...cardToAdd });\n\n//       successMsg(\"Card added to favorites.\");\n//       return await axios.patch(`${api}/${res.data[0]._id}`, {\n//         favCards: res.data[0].favCards,\n//       });\n//     } else {\n//       successMsg(\"Card is already in favorites.\");\n//     }\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n\nexport function createFav(_id: string) {\n  return axios.post(api, { _id: _id, favCards: [] });\n}\n\nexport function checkFavCard(favToCheck: Card, _id: string) {\n  return axios.get(`${api}/${_id}`);\n}\n\nexport async function removeFromFav(userId: string, cardId: string) {\n  try {\n    let res = await getFav(userId);\n    res.data[0].favCards = res.data[0].favCards.filter((favCard: Card) => favCard._id !== cardId);\n    return axios.patch(`${api}/${res.data[0]._id}`, {\n      favCards: res.data[0].favCards,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,SAASC,UAAU,QAAQ,qBAAqB;AAEhD,IAAIC,GAAW,GAAI,GAAEC,OAAO,CAACC,GAAG,CAACC,aAAc,YAAW;AAE1D,OAAO,SAASC,MAAMA,CAACC,MAAc,EAAE;EACrC,OAAOP,KAAK,CAACQ,GAAG,CAAE,GAAEN,GAAI,WAAUK,MAAO,EAAC,CAAC;AAC7C;;AAEA;AACA,OAAO,eAAeE,QAAQA,CAACF,MAAc,EAAEG,MAAc,EAAE;EAC7D,IAAI;IACF,IAAIC,GAAG,GAAG,MAAML,MAAM,CAACC,MAAM,CAAC;IAC9B,IAAII,GAAG,CAACC,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;MACzB,MAAMC,SAAS,CAACP,MAAM,CAAC;MACvBI,GAAG,GAAG,MAAML,MAAM,CAACC,MAAM,CAAC;IAC5B;IAEA,MAAMQ,SAAS,GAAGJ,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACI,QAAQ,CAACC,IAAI,CAAEC,IAAU,IAAKA,IAAI,CAACC,GAAG,KAAKT,MAAM,CAAC;IAChF,IAAI,CAACK,SAAS,EAAE;MACdJ,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACI,QAAQ,CAACI,IAAI,CAACV,MAAM,CAAC;MAEjCT,UAAU,CAAC,0BAA0B,CAAC;MACtC,OAAO,MAAMD,KAAK,CAACqB,KAAK,CAAE,GAAEnB,GAAI,IAAGS,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACO,GAAI,EAAC,EAAE;QACpDH,QAAQ,EAAEL,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACI;MACxB,CAAC,CAAC;IACJ,CAAC,MAAM;MACLf,UAAU,CAAC,+BAA+B,CAAC;IAC7C;EACF,CAAC,CAAC,OAAOqB,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASR,SAASA,CAACK,GAAW,EAAE;EACrC,OAAOnB,KAAK,CAACyB,IAAI,CAACvB,GAAG,EAAE;IAAEiB,GAAG,EAAEA,GAAG;IAAEH,QAAQ,EAAE;EAAG,CAAC,CAAC;AACpD;AAEA,OAAO,SAASU,YAAYA,CAACC,UAAgB,EAAER,GAAW,EAAE;EAC1D,OAAOnB,KAAK,CAACQ,GAAG,CAAE,GAAEN,GAAI,IAAGiB,GAAI,EAAC,CAAC;AACnC;AAEA,OAAO,eAAeS,aAAaA,CAACrB,MAAc,EAAEG,MAAc,EAAE;EAClE,IAAI;IACF,IAAIC,GAAG,GAAG,MAAML,MAAM,CAACC,MAAM,CAAC;IAC9BI,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACI,QAAQ,GAAGL,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACI,QAAQ,CAACa,MAAM,CAAEC,OAAa,IAAKA,OAAO,CAACX,GAAG,KAAKT,MAAM,CAAC;IAC7F,OAAOV,KAAK,CAACqB,KAAK,CAAE,GAAEnB,GAAI,IAAGS,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACO,GAAI,EAAC,EAAE;MAC9CH,QAAQ,EAAEL,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACI;IACxB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}