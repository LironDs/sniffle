{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { getCardById } from \"../services/cardsServices\";\nimport { useParams } from \"react-router-dom\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardInfo = () => {\n  _s();\n  let {\n    id\n  } = useParams();\n  let {\n    etst,\n    setEtst\n  } = useState([]);\n  //   let currentCard: Card = cards.find((c) => c.id == Number(card)) as number;\n  useEffect(() => {\n    // get product by id\n    console.log(id);\n    getCardById(Number(id)).then(res => setCard(res.data)).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"This is CardInfo \", card.id]\n  }, void 0, true);\n};\n_s(CardInfo, \"0mD19/xGDdoKQ7zTgreuDxf6dcM=\", false, function () {\n  return [useParams];\n});\n_c = CardInfo;\nexport default CardInfo;\nvar _c;\n$RefreshReg$(_c, \"CardInfo\");","map":{"version":3,"names":["useEffect","useState","getCardById","useParams","Fragment","_Fragment","jsxDEV","_jsxDEV","CardInfo","_s","id","etst","setEtst","console","log","Number","then","res","setCard","data","catch","err","children","card","_c","$RefreshReg$"],"sources":["/Users/lironds/Documents/FullStack/HackerU/react/sniffle/src/components/CardInfo.tsx"],"sourcesContent":["import { FunctionComponent, useEffect, useState } from \"react\";\nimport { getCardById } from \"../services/cardsServices\";\nimport { useParams } from \"react-router-dom\";\nimport Card from \"../interfaces/Card\";\n\ninterface CardInfoProps {}\n\nconst CardInfo: FunctionComponent<CardInfoProps> = () => {\n  let { id } = useParams();\n  let { etst, setEtst } = useState<Card[]>([]);\n  //   let currentCard: Card = cards.find((c) => c.id == Number(card)) as number;\n  useEffect(() => {\n    // get product by id\n    console.log(id);\n\n    getCardById(Number(id))\n      .then((res) => setCard(res.data))\n      .catch((err) => console.log(err));\n  }, []);\n  return (\n    <>\n      This is CardInfo {card.id}\n      {/* {card.map((card: Card) => (\n        <div\n          key={card.id}\n          className=\"card mb-3 mx-2\"\n          style={{ maxWidth: \"340px\", maxHeight: \"500px\" }}\n        >\n          <div className=\" g-0 mx-auto\">\n            <div\n              className=\"text-center\"\n              // style={{ width: \"250px\", height: \"200\" }}\n            >\n              <img\n                src={card.imageUrl}\n                className=\"rounded-start p-1 object-fit-contain \"\n                alt={card.imageAlt}\n                width={\"200px\"}\n                height={\"150px\"}\n              />\n            </div>\n            <div className=\"col-md-12\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{card.title}</h5>\n                <p className=\"card-text\">{card.description}</p>\n                <hr />\n                <p className=\"card-text\">Phone: {card.phone}</p>\n                <p className=\"card-text\">Email: {card.email}</p>\n                <p className=\"card-text\">City: {card.city}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      ))} */}\n    </>\n  );\n};\n\nexport default CardInfo;\n"],"mappings":";AAAA,SAA4BA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAQ,2BAA2B;AACvD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAK7C,MAAMC,QAA0C,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvD,IAAI;IAAEC;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC;EACxB,IAAI;IAAEQ,IAAI;IAAEC;EAAQ,CAAC,GAAGX,QAAQ,CAAS,EAAE,CAAC;EAC5C;EACAD,SAAS,CAAC,MAAM;IACd;IACAa,OAAO,CAACC,GAAG,CAACJ,EAAE,CAAC;IAEfR,WAAW,CAACa,MAAM,CAACL,EAAE,CAAC,CAAC,CACpBM,IAAI,CAAEC,GAAG,IAAKC,OAAO,CAACD,GAAG,CAACE,IAAI,CAAC,CAAC,CAChCC,KAAK,CAAEC,GAAG,IAAKR,OAAO,CAACC,GAAG,CAACO,GAAG,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EACN,oBACEd,OAAA,CAAAF,SAAA;IAAAiB,QAAA,GAAE,mBACiB,EAACC,IAAI,CAACb,EAAE;EAAA,eAiCzB,CAAC;AAEP,CAAC;AAACD,EAAA,CAjDID,QAA0C;EAAA,QACjCL,SAAS;AAAA;AAAAqB,EAAA,GADlBhB,QAA0C;AAmDhD,eAAeA,QAAQ;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}