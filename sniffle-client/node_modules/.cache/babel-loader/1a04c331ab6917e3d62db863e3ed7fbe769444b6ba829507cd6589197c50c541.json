{"ast":null,"code":"import axios from \"axios\";\nlet api = `${process.env.REACT_APP_API}/favorites`;\nexport function getFav(userId) {\n  return axios.get(api, {\n    headers: {\n      Authorization: JSON.parse(sessionStorage.getItem(\"token\")).token\n    },\n    data: {\n      userId: userId\n    }\n  });\n}\n\n// add to fav / update fav\n// export async function addToFav(userId: string, cardId: string) {\n//   try {\n//     let res = await getFav(userId);\n//     if (res.data.length === 0) {\n//       await createFav(userId);\n//       res = await getFav(userId);\n//     }\n\n//     const cardInFav = res.data[0].favCards.some((card: Card) => card._id === cardId);\n//     if (!cardInFav) {\n//       res.data[0].favCards.push(cardId);\n\n//       successMsg(\"Card added to favorites.\");\n//       return await axios.patch(`${api}/${res.data[0]._id}`, {\n//         favCards: res.data[0].favCards,\n//       });\n//     } else {\n//       successMsg(\"Card is already in favorites.\");\n//     }\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n// export async function updateFav(cardToAdd: Card, action: \"add\" | \"remove\") {\n//   try {\n//     return await axios.post(api, cardToAdd, {\n//       headers: {\n//         Authorization: JSON.parse(sessionStorage.getItem(\"token\") as string).token,\n//       },\n//     });\n\n//     // Check the response and show a message accordingly\n//     if (response.status === 200) {\n//       if (action === \"add\") {\n//         return { success: true, message: \"Card added to favorites\" };\n//       } else if (action === \"remove\") {\n//         return { success: true, message: \"Card removed from favorites\" };\n//       }\n//     }\n//   } catch (error) {\n//     throw error;\n//   }\n// }\nasync function addOrRemoveCard() {\n  try {\n    const response = await updateFav(cardToAdd);\n    const {\n      action,\n      message\n    } = response.data; // Assuming the action and message are returned in the response\n\n    if (response.status === 200) {\n      if (action === \"add\") {\n        console.log(\"Card added to favorites\");\n        // Show a success message or update your UI here\n      } else if (action === \"remove\") {\n        console.log(\"Card removed from favorites\");\n        // Show a success message or update your UI here\n      }\n    } else {\n      // Handle other status codes or errors here\n      console.log(`Error: ${message}`);\n    }\n  } catch (error) {\n    console.error(\"An error occurred\", error);\n    // Handle errors here\n  }\n}","map":{"version":3,"names":["axios","api","process","env","REACT_APP_API","getFav","userId","get","headers","Authorization","JSON","parse","sessionStorage","getItem","token","data","addOrRemoveCard","response","updateFav","cardToAdd","action","message","status","console","log","error"],"sources":["/Users/lironds/Documents/FullStack/HackerU/react/sniffle-client/src/services/favServices.ts"],"sourcesContent":["import axios from \"axios\";\nimport Card from \"../interfaces/Card\";\nimport Favorite from \"../interfaces/Favorite\";\nimport { successMsg } from \"./feedbacksServices\";\n\nlet api: string = `${process.env.REACT_APP_API}/favorites`;\n\nexport function getFav(userId: string) {\n  return axios.get(api, {\n    headers: {\n      Authorization: JSON.parse(sessionStorage.getItem(\"token\") as string).token,\n    },\n    data: {\n      userId: userId,\n    },\n  });\n}\n\n// add to fav / update fav\n// export async function addToFav(userId: string, cardId: string) {\n//   try {\n//     let res = await getFav(userId);\n//     if (res.data.length === 0) {\n//       await createFav(userId);\n//       res = await getFav(userId);\n//     }\n\n//     const cardInFav = res.data[0].favCards.some((card: Card) => card._id === cardId);\n//     if (!cardInFav) {\n//       res.data[0].favCards.push(cardId);\n\n//       successMsg(\"Card added to favorites.\");\n//       return await axios.patch(`${api}/${res.data[0]._id}`, {\n//         favCards: res.data[0].favCards,\n//       });\n//     } else {\n//       successMsg(\"Card is already in favorites.\");\n//     }\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n// export async function updateFav(cardToAdd: Card, action: \"add\" | \"remove\") {\n//   try {\n//     return await axios.post(api, cardToAdd, {\n//       headers: {\n//         Authorization: JSON.parse(sessionStorage.getItem(\"token\") as string).token,\n//       },\n//     });\n\n//     // Check the response and show a message accordingly\n//     if (response.status === 200) {\n//       if (action === \"add\") {\n//         return { success: true, message: \"Card added to favorites\" };\n//       } else if (action === \"remove\") {\n//         return { success: true, message: \"Card removed from favorites\" };\n//       }\n//     }\n//   } catch (error) {\n//     throw error;\n//   }\n// }\nasync function addOrRemoveCard() {\n  try {\n    const response = await updateFav(cardToAdd);\n    const { action, message } = response.data; // Assuming the action and message are returned in the response\n\n    if (response.status === 200) {\n      if (action === \"add\") {\n        console.log(\"Card added to favorites\");\n        // Show a success message or update your UI here\n      } else if (action === \"remove\") {\n        console.log(\"Card removed from favorites\");\n        // Show a success message or update your UI here\n      }\n    } else {\n      // Handle other status codes or errors here\n      console.log(`Error: ${message}`);\n    }\n  } catch (error) {\n    console.error(\"An error occurred\", error);\n    // Handle errors here\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAKzB,IAAIC,GAAW,GAAI,GAAEC,OAAO,CAACC,GAAG,CAACC,aAAc,YAAW;AAE1D,OAAO,SAASC,MAAMA,CAACC,MAAc,EAAE;EACrC,OAAON,KAAK,CAACO,GAAG,CAACN,GAAG,EAAE;IACpBO,OAAO,EAAE;MACPC,aAAa,EAAEC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAW,CAAC,CAACC;IACvE,CAAC;IACDC,IAAI,EAAE;MACJT,MAAM,EAAEA;IACV;EACF,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeU,eAAeA,CAAA,EAAG;EAC/B,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,SAAS,CAACC,SAAS,CAAC;IAC3C,MAAM;MAAEC,MAAM;MAAEC;IAAQ,CAAC,GAAGJ,QAAQ,CAACF,IAAI,CAAC,CAAC;;IAE3C,IAAIE,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;MAC3B,IAAIF,MAAM,KAAK,KAAK,EAAE;QACpBG,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;QACtC;MACF,CAAC,MAAM,IAAIJ,MAAM,KAAK,QAAQ,EAAE;QAC9BG,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;QAC1C;MACF;IACF,CAAC,MAAM;MACL;MACAD,OAAO,CAACC,GAAG,CAAE,UAASH,OAAQ,EAAC,CAAC;IAClC;EACF,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}