{"ast":null,"code":"var _jsxFileName = \"/Users/lironds/Documents/FullStack/HackerU/react/sniffle/src/components/CardInfo.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { getCardById } from \"../services/cardsServices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CardInfo = () => {\n  _s();\n  let {\n    id\n  } = useParams();\n  let navigate = useNavigate();\n  let [card, setCard] = useState({\n    title: \"\",\n    subTitle: \"\",\n    description: \"\",\n    phone: \"\",\n    email: \"\",\n    web: \"\",\n    imageUrl: \"\",\n    imageAlt: \"\",\n    state: \"\",\n    country: \"\",\n    city: \"\",\n    street: \"\",\n    houseNumber: 0,\n    zip: \"\"\n  });\n  useEffect(() => {\n    getCardById(Number(id)).then(res => {\n      console.log(res.data);\n      setCard(res.data);\n    }).catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card d-flex flex-row\",\n      style: {\n        width: \"400px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card col\",\n        style: {\n          width: \"400px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"card-img-top col\",\n          src: card.imageUrl,\n          alt: \"Card image\",\n          width: \"250px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"card-title\",\n            children: \"John Doe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: \"Some example text.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            className: \"btn btn-primary\",\n            children: \"See Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(CardInfo, \"FPEippYT2HL1BLv35XpbqvInDGI=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CardInfo;\nexport default CardInfo;\nvar _c;\n$RefreshReg$(_c, \"CardInfo\");","map":{"version":3,"names":["useEffect","useState","useNavigate","useParams","getCardById","jsxDEV","_jsxDEV","Fragment","_Fragment","CardInfo","_s","id","navigate","card","setCard","title","subTitle","description","phone","email","web","imageUrl","imageAlt","state","country","city","street","houseNumber","zip","Number","then","res","console","log","data","catch","error","children","className","style","width","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","href","_c","$RefreshReg$"],"sources":["/Users/lironds/Documents/FullStack/HackerU/react/sniffle/src/components/CardInfo.tsx"],"sourcesContent":["import { FunctionComponent, useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Card from \"../interfaces/Card\";\nimport { getCardById } from \"../services/cardsServices\";\n\ninterface CardInfoProps {}\n\nconst CardInfo: FunctionComponent<CardInfoProps> = () => {\n  let { id } = useParams();\n  let navigate = useNavigate();\n\n  let [card, setCard] = useState<Card>({\n    title: \"\",\n    subTitle: \"\",\n    description: \"\",\n    phone: \"\",\n    email: \"\",\n    web: \"\",\n    imageUrl: \"\",\n    imageAlt: \"\",\n    state: \"\",\n    country: \"\",\n    city: \"\",\n    street: \"\",\n    houseNumber: 0,\n    zip: \"\",\n  });\n\n  useEffect(() => {\n    getCardById(Number(id))\n      .then((res) => {\n        console.log(res.data);\n        setCard(res.data);\n      })\n      .catch((error) => console.log(error));\n  }, []);\n  return (\n    <>\n      {/* <div className=\"container-fluid\">\n        <div className=\"d-flex flex-row card w-50\">\n          <div className=\"col-md-6\">\n            <img\n              src={card.imageUrl}\n              className=\"card-img-left \"\n              alt={card.imageAlt}\n              //   width={\"200px\"}\n              //   height={\"150px\"}\n            />\n          </div>\n          <div className=\"card-body col-md-6\">\n            <h5 className=\"card-title\">{card.title}</h5>\n            <h5 className=\"card-title\">{card.subTitle}</h5>\n            <hr />\n            <p className=\"card-text\">{card.description}</p>\n            <p className=\"card-text\">Phone: {card.phone}</p>\n            <p className=\"card-text\">Email: {card.email}</p>\n            <p className=\"card-text\">WebSite: {card.web}</p>\n            <p className=\"card-text\">country: {card.country}</p>\n            <p className=\"card-text\">city: {card.city}</p>\n            <p className=\"card-text\">street: {card.street}</p>\n            <p className=\"card-text\">zip: {card.zip}</p>\n          </div>\n        </div>\n      </div> */}\n\n      <div className=\"card d-flex flex-row\" style={{ width: \"400px\" }}>\n        <div className=\"card col\" style={{ width: \"400px\" }}>\n          <img className=\"card-img-top col\" src={card.imageUrl} alt=\"Card image\" width=\"250px\" />\n          <div className=\"card-body col\">\n            <h4 className=\"card-title\">John Doe</h4>\n            <p className=\"card-text\">Some example text.</p>\n            <a href=\"#\" className=\"btn btn-primary\">\n              See Profile\n            </a>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default CardInfo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}