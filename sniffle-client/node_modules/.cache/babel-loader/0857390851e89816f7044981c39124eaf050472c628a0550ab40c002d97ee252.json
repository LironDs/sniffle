{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardInfo = () => {\n  _s();\n  let {\n    id\n  } = useParams();\n  let {\n    cards,\n    setCards\n  } = useState([]);\n  //   let currentCard: Card = cards.find((c) => c.id == Number(card)) as number;\n  //   useEffect(() => {\n  //     // get product by id\n  //     console.log(id);\n\n  //     getCardById(Number(id))\n  //       .then((res) => setCurrentCard(res.data))\n  //       .catch((err) => console.log(err));\n  //   }, []);\n\n  useEffect(() => {\n    // Here, you would fetch the card information using the `id` parameter\n    // For example, you can fetch it from an API or a data source\n    // For simplicity, let's assume you have a function called `fetchCardById`\n    // that fetches the card by its id.\n\n    const fetchCardById = async id => {\n      try {\n        // Perform the API call or fetch from your data source\n        const response = await fetch(`${api}/cards/${id}`);\n        const data = await response.json();\n        setCards(data); // Assuming the API response contains the card data\n      } catch (error) {\n        console.error(\"Error fetching card:\", error);\n      }\n    };\n    fetchCardById(id);\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"This is CardInfo \", card.id]\n  }, void 0, true);\n};\n_s(CardInfo, \"x/LEK/huaUb9sYJLCtYKaGepDgI=\", false, function () {\n  return [useParams];\n});\n_c = CardInfo;\nexport default CardInfo;\nvar _c;\n$RefreshReg$(_c, \"CardInfo\");","map":{"version":3,"names":["useEffect","useState","useParams","Fragment","_Fragment","jsxDEV","_jsxDEV","CardInfo","_s","id","cards","setCards","fetchCardById","response","fetch","api","data","json","error","console","children","card","_c","$RefreshReg$"],"sources":["/Users/lironds/Documents/FullStack/HackerU/react/sniffle/src/components/CardInfo.tsx"],"sourcesContent":["import { FunctionComponent, useEffect, useState } from \"react\";\nimport { getCardById } from \"../services/cardsServices\";\nimport { useParams } from \"react-router-dom\";\nimport Card from \"../interfaces/Card\";\n\ninterface CardInfoProps {}\n\nconst CardInfo: FunctionComponent<CardInfoProps> = () => {\n  let { id } = useParams();\n  let { cards, setCards } = useState<Card[]>([]);\n  //   let currentCard: Card = cards.find((c) => c.id == Number(card)) as number;\n  //   useEffect(() => {\n  //     // get product by id\n  //     console.log(id);\n\n  //     getCardById(Number(id))\n  //       .then((res) => setCurrentCard(res.data))\n  //       .catch((err) => console.log(err));\n  //   }, []);\n\n  useEffect(() => {\n    // Here, you would fetch the card information using the `id` parameter\n    // For example, you can fetch it from an API or a data source\n    // For simplicity, let's assume you have a function called `fetchCardById`\n    // that fetches the card by its id.\n\n    const fetchCardById = async (id: string) => {\n      try {\n        // Perform the API call or fetch from your data source\n        const response = await fetch(`${api}/cards/${id}`);\n        const data = await response.json();\n        setCards(data); // Assuming the API response contains the card data\n      } catch (error) {\n        console.error(\"Error fetching card:\", error);\n      }\n    };\n\n    fetchCardById(id);\n  }, [id]);\n  return (\n    <>\n      This is CardInfo {card.id}\n      {/* {card.map((card: Card) => (\n        <div\n          key={card.id}\n          className=\"card mb-3 mx-2\"\n          style={{ maxWidth: \"340px\", maxHeight: \"500px\" }}\n        >\n          <div className=\" g-0 mx-auto\">\n            <div\n              className=\"text-center\"\n              // style={{ width: \"250px\", height: \"200\" }}\n            >\n              <img\n                src={card.imageUrl}\n                className=\"rounded-start p-1 object-fit-contain \"\n                alt={card.imageAlt}\n                width={\"200px\"}\n                height={\"150px\"}\n              />\n            </div>\n            <div className=\"col-md-12\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{card.title}</h5>\n                <p className=\"card-text\">{card.description}</p>\n                <hr />\n                <p className=\"card-text\">Phone: {card.phone}</p>\n                <p className=\"card-text\">Email: {card.email}</p>\n                <p className=\"card-text\">City: {card.city}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      ))} */}\n    </>\n  );\n};\n\nexport default CardInfo;\n"],"mappings":";AAAA,SAA4BA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE9D,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAK7C,MAAMC,QAA0C,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvD,IAAI;IAAEC;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC;EACxB,IAAI;IAAEQ,KAAK;IAAEC;EAAS,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC;EAC9C;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEAD,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACA;;IAEA,MAAMY,aAAa,GAAG,MAAOH,EAAU,IAAK;MAC1C,IAAI;QACF;QACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,GAAI,UAASN,EAAG,EAAC,CAAC;QAClD,MAAMO,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCN,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC;MAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDN,aAAa,CAACH,EAAE,CAAC;EACnB,CAAC,EAAE,CAACA,EAAE,CAAC,CAAC;EACR,oBACEH,OAAA,CAAAF,SAAA;IAAAgB,QAAA,GAAE,mBACiB,EAACC,IAAI,CAACZ,EAAE;EAAA,eAiCzB,CAAC;AAEP,CAAC;AAACD,EAAA,CArEID,QAA0C;EAAA,QACjCL,SAAS;AAAA;AAAAoB,EAAA,GADlBf,QAA0C;AAuEhD,eAAeA,QAAQ;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}